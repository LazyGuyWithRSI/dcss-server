# Global config variables:

# Max amount of registered users to allow.
maxusers = 64000

allow_new_nicks = yes

# Max length for newly registered nicks. Must be less than 20.
# By default, NetHack only stores the first 10 chars of a name into
# the record/logfile.
maxnicklen = 20

# Set the default watching-screen sorting mode. Can be one of
# "username", "game", "windowsize", "starttime" or "idletime".
# "username" is the default.
sortmode = "username"

# Maximum idle time in menus
menu_max_idle_time = 3600

# Path to a prepared chroot jail.
chroot_path = "/chroot/"

# From inside the jail, dgamelaunch's working directory for rcfiles/ttyrec/etc
dglroot = "/dgldir/"

# Server ID string
server_id = "Public Crawl server: crawl.akrasiac.org"


# From inside the jail, location of a banner file, the topmost line will be
# shown in submenus that cannot be defined separately.
# Some string substitution is done for the file:
# $VERSION   replaced with "dgamelaunch v" + dgl version number.
# $SERVERID  replaced with the server_id string, as defined above.
banner = "/dgldir/data/dgl-banner"

# The following two options are fairly insecure. They will force us to 
# load the password/group database into memory while still having root
# privileges. Replace them with shed_uid/shed_gid entries as soon as
# possible if you decide to use them. dgamelaunch will inform you of
# the uids/gids corresponding to your choices when it loads.
#
# Note that shed_uid and shed_gid will always take precedence over
# shed_user and shed_group if they are specified.

# shed_user: username to shed privileges to
#shed_user = "games"
# shed_group: group name to shed privileges to
#shed_group = "games"

# Preferably, you may use the respective gids/uids. This is for Debian:
shed_uid = 5
shed_gid = 60

# The defaults are usually just fine for this. passwd refers to the file
# that stores the user database, and lockfile is only used internally by
# dgamelaunch.

passwd = "/dgldir/data/dgl-login"
lockfile = "/dgldir/data/dgl-lock"

watch_columns = [ ["", "", 1, "%s)"],
                  ["User", "username", 4, "%-15s"],
                  ["Game", "game", 20, "%-9s"],
                  ["Term", "windowsize", 31, "%s"],
                  ["Idle", "idletime", 40, "%-10s"],
                  ["Viewers", "watchers", 52, "%5s"],
                  ["Started", "starttime", 61, "%s"]
                ]

#
# define some commands that are run when something happens. format is
# commands [ <time> ] = <command> ...
#
# <time> can be one of:
#   dglstart  = when someone telnets in
#   login     = when user has logged in
#   register  = right after a new user is registered
#   gamestart = just before a game is started
#
# <command> is:
#   mkdir "foo"        = create a directory "foo"
#   chdir "foo"        = change current work dir to "foo"
#   cp "foo" "bar"     = copy file "foo" to "bar", overwriting previous "bar"
#   ifnxcp "foo" "bar" = copy file "foo" to "bar", if "bar" doesn't exist
#   unlink "foo"       = delete file "foo"
#   setenv "foo" "bar" = set environment variable "foo" to "bar"
#   exec "foo" "bar"   = execute "foo" with "bar" as it's param
#   chpasswd           = do the change password prompting, if logged in
#   chmail             = do the change email prompting, if logged in
#   watch_menu         = go to the watching menu
#   quit               = quit dgl
#   ask_login          = do the login prompting, if not logged in
#   ask_register       = do register new user prompting, if not logged in and
#                        registration of new nicks is allowed.
#   edit_options "foo" = edit options for game which has the short name "foo"
#                        (user must be logged in)
#   play_game "foo"    = start game which has the short name "foo"
#                        (user must be logged in)
#   submenu "foo"      = go to submenu "foo"
#   return             = return from submenu
#
# The commands will be done inside the chroot and with the uid and gid
# defined above.
# Parameters to the commands are subject to variable substitution:
#   %r = dglroot, as defined above
#   %n = user nick, if user is logged in
#   %u = shed_uid, as defined above, but numeric
#   %g = game name, if user has selected a game.
#   %s = short game name, if user has selected a game.
#
# eg. commands[login] = mkdir "foo", unlink "bar", setenv "Z" "foo"
#

commands[register] = mkdir "%rttyrec/%n",
    ifnxcp "%rdata/dgl-default.crawl-0.7.rc" "%rrcfiles/crawl-0.7/%n.rc",
    ifnxcp "%rdata/dgl-default.crawl-0.7.macro" "%rrcfiles/crawl-0.7/%n.macro",
    ifnxcp "%rdata/dgl-default.crawl-0.6.rc" "%rrcfiles/crawl-0.6/%n.rc",
    ifnxcp "%rdata/dgl-default.crawl-0.6.macro" "%rrcfiles/crawl-0.6/%n.macro"

commands[login] = mkdir "%rttyrec/%n",
    ifnxcp "%rrcfiles/%n.crawlrc" "%rrcfiles/crawl-0.7/%n.rc",
    ifnxcp "%rrcfiles/%n.macro.06" "%rrcfiles/crawl-0.7/%n.macro",
    ifnxcp "%rrcfiles/%n.crawlrc" "%rrcfiles/crawl-0.6/%n.rc",
    ifnxcp "%rrcfiles/%n.macro.06" "%rrcfiles/crawl-0.6/%n.macro",
    ifnxcp "%rdata/dgl-default.crawl-0.7.rc" "%rrcfiles/crawl-0.7/%n.rc",
    ifnxcp "%rdata/dgl-default.crawl-0.7.macro" "%rrcfiles/crawl-0.7/%n.macro",
    ifnxcp "%rdata/dgl-default.crawl-0.6.rc" "%rrcfiles/crawl-0.6/%n.rc",
    ifnxcp "%rdata/dgl-default.crawl-0.6.macro" "%rrcfiles/crawl-0.6/%n.macro"

menu["mainmenu_anon"] {
  bannerfile = "/dgldir/data/menus/main_anon.txt"
  # cursor = (5,18)
  commands["lL"] = ask_login
  commands["rR"] = ask_register
  commands["wW"] = watch_menu
  commands["qQ"] = quit
}

menu["mainmenu_admin"] {
  bannerfile = "/dgldir/data/menus/main_admin.txt"
  commands["cC"] = chpasswd
  commands["eE"] = chmail
  commands["wW"] = watch_menu
  commands["tT"] = submenu "crawl-git"
  commands["1"] = submenu "crawl-0.7"
  commands["2"] = submenu "crawl-0.6"
  commands["kK"] = play_game "rfk"
  commands["pP"] = play_game "Crawl-0.7"
  commands["sS"] = play_game "Sprint-0.7"
  #commands["zZ"] = play_game "zd-svn"
  commands["qQ"] = quit
}

menu["mainmenu_user"] {
  bannerfile = "/dgldir/data/menus/main_user.txt"
  commands["cC"] = chpasswd
  commands["eE"] = chmail
  commands["wW"] = watch_menu
  #commands["tT"] = submenu "crawl-svn"
  commands["1"] = submenu "crawl-0.7"
  commands["2"] = submenu "crawl-0.6"
  commands["kK"] = play_game "rfk"
  commands["pP"] = play_game "Crawl-0.7"
  commands["sS"] = play_game "Sprint-0.7"
  #commands["zZ"] = play_game "zd-svn"
  commands["qQ"] = quit
}

menu["watchmenu_help"] {
  bannerfile = "/dgldir/data/menus/watchmenu_help.txt"
  commands["qQ"] = return
}

menu["crawl-git"] {
  bannerfile = "/dgldir/data/menus/crawl_git.txt"
  commands["o"] = exec "ee" "%rrcfiles/crawl-git/%n.rc"
  commands["O"] = exec "virus" "%rrcfiles/crawl-git/%n.rc"
  commands["m"] = exec "ee" "%rrcfiles/crawl-git/%n.macro"
  commands["M"] = exec "virus" "%rrcfiles/crawl-git/%n.macro"
  commands["pP"] = play_game "Crawl-git"
  commands["tT"] = play_game "Tut-git"
  commands["sS"] = play_game "Sprint-git"
  commands["zZ"] = play_game "ZD-git"
  commands["A"] = submenu "crawl-git-adv"
  commands["wW"] = watch_menu
  commands["qQ"] = return
}

menu["crawl-0.7"] {
  bannerfile = "/dgldir/data/menus/crawl-0.7.txt"
  commands["o"] = exec "ee" "%rrcfiles/crawl-0.7/%n.rc"
  commands["O"] = exec "virus" "%rrcfiles/crawl-0.7/%n.rc"
  commands["m"] = exec "ee" "%rrcfiles/crawl-0.7/%n.macro"
  commands["M"] = exec "virus" "%rrcfiles/crawl-0.7/%n.macro"
  commands["pP"] = play_game "Crawl-0.7"
  commands["sS"] = play_game "Sprint-0.7"
  commands["A"] = submenu "crawl-0.7-adv"
  commands["wW"] = watch_menu
  commands["qQ"] = return
}

menu["crawl-0.6"] {
  bannerfile = "/dgldir/data/menus/crawl-0.6.txt"
  commands["o"] = exec "ee" "%rrcfiles/crawl-0.6/%n.rc"
  commands["O"] = exec "virus" "%rrcfiles/crawl-0.6/%n.rc"
  commands["m"] = exec "ee" "%rrcfiles/crawl-0.6/%n.macro"
  commands["M"] = exec "virus" "%rrcfiles/crawl-0.6/%n.macro"
  commands["pP"] = play_game "Crawl-0.6"
  commands["A"] = submenu "crawl-0.6-adv"
  commands["wW"] = watch_menu
  commands["qQ"] = return
}

menu["crawl-git-adv"] {
  bannerfile = "/dgldir/data/menus/crawl_svn_adv.txt"
  commands["B"] =
    exec "/bin/savegame-backup.sh" "%n crawl-git",
    return
  commands["D"] =
    exec "savegame-delete.sh" "%n crawl-git",
    return
  commands["O"] =
    cp "%rdata/dgl-default.crawl-git.rc" "%rrcfiles/crawl-git/%n.rc",
    return
  commands["M"] =
    cp "%rdata/dgl-default.crawl-git.macro" "%rrcfiles/crawl-git/%n.macro",
    return
  commands["qQ"] = return
}

menu["crawl-0.7-adv"] {
  bannerfile = "/dgldir/data/menus/crawl-0.7_adv.txt"
  commands["B"] =
    exec "/bin/savegame-backup.sh" "%n crawl-0.7",
    return
  commands["O"] =
    cp "%rdata/dgl-default.crawl-0.7.rc" "%rrcfiles/crawl-0.7/%n.rc",
    return
  commands["M"] =
    cp "%rdata/dgl-default.crawl-0.7.macro" "%rrcfiles/crawl-0.7/%n.macro",
    return
  commands["qQ"] = return
}

menu["crawl-0.6-adv"] {
  bannerfile = "/dgldir/data/menus/crawl-0.6_adv.txt"
  commands["B"] =
    exec "/bin/savegame-backup.sh" "%n crawl-0.7",
    return
  commands["O"] =
    cp "%rdata/dgl-default.crawl-0.6.rc" "%rrcfiles/crawl-0.6/%n.rc",
    return
  commands["M"] =
    cp "%rdata/dgl-default.crawl-0.6.macro" "%rrcfiles/crawl-0.6/%n.macro",
    return
  commands["qQ"] = return
}


##############################################################################
DEFINE {
  game_path = "/usr/games/crawl7-caller"
  game_name = "Crawl Stone Soup 0.7.1"
  short_name = "Crawl-0.7"

  game_args = "/usr/games/crawl7-caller", 
              "-name", "%n",
              "-dir", "%rttyrec/%n/",
              "-rc", "%rrcfiles/crawl-0.7/%n.rc",
              "-morgue", "%rttyrec/%n/",
              "-macro", "%rrcfiles/crawl-0.7/%n.macro"
              
  #
  # From inside the jail, where dgamelaunch should put mail - should
  # match up with the game's settings.
  spooldir = "/var/mail/"

  max_idle_time = 3600

  # make sure the inprogress dir actually exists. default is "inprogress/"
  # each game you define here must have it's own.
  inprogressdir = "%rinprogress-crawl07/"
  ttyrecdir = "%rttyrec/%n/"
}

##############################################################################
DEFINE {
  game_path = "/usr/games/crawl7-caller"
  game_name = "Sprint 0.7.1"
  short_name = "Sprint-0.7"

  game_args = "/usr/games/crawl7-caller", 
              "-name", "%n",
              "-dir", "%rttyrec/%n/",
              "-rc", "%rrcfiles/crawl-0.7/%n.rc",
              "-morgue", "%rttyrec/%n/",
              "-macro", "%rrcfiles/crawl-0.7/%n.macro",
              "-sprint"
              
  #
  # From inside the jail, where dgamelaunch should put mail - should
  # match up with the game's settings.
  spooldir = "/var/mail/"

  max_idle_time = 3600

  # make sure the inprogress dir actually exists. default is "inprogress/"
  # each game you define here must have it's own.
  inprogressdir = "%rinprogress-crawl07-sprint/"
  ttyrecdir = "%rttyrec/%n/"
}

##############################################################################

DEFINE {
  game_path = "/usr/games/crawl6-caller"
  game_name = "Crawl 0.6.1"
  short_name = "Crawl-0.6"

  game_args = "/usr/games/crawl6-caller", 
              "-name", "%n",
              "-dir", "%rttyrec/%n/",
              "-rc", "%rrcfiles/crawl-0.6/%n.crawlrc",
              "-morgue", "%rttyrec/%n/",
              "-macro", "%rrcfiles/crawl-0.6/%n.macro"
              
  #
  # From inside the jail, where dgamelaunch should put mail - should
  # match up with the game's settings.
  spooldir = "/var/mail/"

  max_idle_time = 3600

  # make sure the inprogress dir actually exists. default is "inprogress/"
  # each game you define here must have it's own.
  inprogressdir = "%rinprogress-crawl06/"
  ttyrecdir = "%rttyrec/%n/"
}

DEFINE {
  game_path = "/usr/games/robotfindskitten"
  game_name = "robotfindskitten" 
  short_name = "rfk"
  game_args = "/usr/games/robotfindskitten"
  inprogressdir = "%rinprogress-rfk/"
  
  # Don't bother with rfk ttyrecs.
}

#game_num=3
##From inside the jail, the location of the binary to be launched.
#game_path = "/usr/games/crawl4-caller"
#
## Full name of the game
#game_name = "Crawl Stone Soup 0.4.5"
#
## Short name, used in the watching menu
#short_name = "Crawl0.4"
#
## arguments for when we exec the binary
#game_args = "/usr/games/crawl4-caller"
#game_args = "-name"
#game_args = "%n"
#game_args = "-dir"
#game_args = "%rttyrec/%n/"
#game_args = "-rc"
#game_args = "%rrcfiles/%n.crawlrc"
#game_args = "-morgue"
#game_args = "%rttyrec/%n/"
#game_args = "-macro"
#game_args = "%rrcfiles/%n.macro.04"
##
## From inside the jail, where dgamelaunch should put mail - should match up with
## NetHack settings.
# spooldir = "/var/mail/"
#
## From inside the jail, the default .nethackrc that is copied for new users.
# rc_template = "/dgl-default-04"
#
# rc_fmt = "%rrcfiles/%n.crawlrc"
#
##thanks, V-Napkin!
# macro_template = "/dgl-default-macrofile"
# macro_fmt = "%rrcfiles/%n.macro.04"
#
## From inside the jail, the path to the savefile. %u is replaced by the
## decimal representation of shed_uid, %n is replaced by the player's
## user name. Before starting the game, this file is copied to its name
## with ".bak" appended. Set to an empty string to disable this copying.
#
# savefilefmt = ""
#
## make sure the inprogress dir actually exists. default is "inprogress/"
## each game you define here must have it's own.
# inprogressdir = "inprogress-crawl04/"
#
